
Reading Time:  8 minutes


Most advice comes in the shape of telling you what to do to be successful. It’s instructional, it shows the happy path, and as a reader, I resonate with that a lot. After all, I want to see how it’s done right. I want to learn from the best.
But that’s not the only way to learn. After all, most advice is anecdotal, it often suffers from hindsight bias, and it’s so selective that it may not apply to your entrepreneurial efforts at all.
However, not all is lost.
There is a story about Charlie Munger, who worked as a meteorologist for the US Airforce in World War II. His job was clearing pilots for takeoff and plot a course for their safe return, so he had to make sure his weather predictions would be on point. He was responsible for bringing his pilots home.
Instead of finding the best way to do that, he inverted the problem and considered all the ways that guaranteed that they wouldn’t make it home: he created theoretical scenarios where pilots would run out of fuel, fall into the ocean due to storms or frozen rain, or run into extreme weather phenomenons of all kinds. He drew for those routes and used those to make sure that he’d never suggest such a map to an actual pilot.
Munger laid out all the ways in which he would fail at his task. He played through all of these scenarios to know what conditions would keep him from succeeding.
For a founder, this is an equally useful exercise.
What could you do to make sure your business will fail?
Here are a few scenarios of questionable choices and why they are likely to backfire.
(And just to make sure: the following advice is inverted. Don’t try this at home.)
Stupid Idea #1: Quit your Job Immediately
The moment you have a business idea, quit your job! Why would you need a stable source of income while you experiment with your completely unvalidated idea? Throw caution to the wind and put all your eggs in one basket. Startups have a 100% survival rate, right? You can definitely survive a few weeks without revenue. Customers are super easy to find, and they’ll pay you boatloads of money quickly anyway. So go ahead, quit your job, remove the safety net to play in the big leagues.
I see way too many founders thinking along those lines. It’s wonderful if you have ideas, but the idea is a minuscule part of building a sustainable business. The initial revenue of a business is zero, and it’s incredibly hard to grow. It may take months or years for a bootstrapped business to become truly profitable. You will need a very long runway for that, and having a day job is a very smart choice. Moonlighting is how many successful projects started. They were successful because the founders had the time and opportunity to experiment without being on the brink of bankruptcy.
Keep your job — or your consulting and freelancing clients — for as long as you can. Just make sure that you’re legally allowed to run a side business.
Stupid Idea #2: Pour your Life Savings into your Unvalidated Project
Alright! So you kept your job. But that business idea, oh boy, is that ever awesome. You don’t need to validate it. It makes perfect sense to all your founder friends — and even your parents! They’re super supportive and would totally buy your product, even though they don’t really understand. Wow, what a clear sign of future success. Time to throw your life savings into the project. Hey, let’s buy a new laptop as well and then pre-purchase a few years’ worth of AWS dedicated instances. It’ll be a super scalable business, after all!
Hold your horses. Every idea needs to be validated, no matter how promising it sounds. Particularly if it sounds like a clear winner, you’ll need to do some research. Otherwise, why is no one doing the exact same thing already?
Also, never ask friends and family to validate your business idea. As Rob Fitzpatrick points out in the Mom Test, you get skewed results from asking the wrong questions to the wrong people. Who should you ask to validate your business? Your future customers! Talking to your prospective users is the path to validation, and even then, you can never be sure.
Don’t waste your hard-earned personal money. Only pay for what you need, and find cheap solutions to keep the lights on while you’re experimenting with your business. Don’t overcommit your funds. A side project is not a full business; you can pull back at any point. Falling prey to the sunk-cost fallacy is easy — but expensive.
Stupid Idea #3: Work on a Project You Hate That Serves People You Don’t Like
So you’re being financially responsible and keep your day job. Awesome. Now, let’s see here: you found an incredibly lucrative opportunity in a traditional industry. In fact, you spotted a gaping hole in the supply chain of the chicken industry. You’re planning to build a really cool remote-control system for their barns. Just a tiny problem: you’re a hardcore vegan. You can’t handle the idea of eating animals. Ah well. It’ll make you money. Lots of money! So you’ll just swallow the feeling of unease and outright disgust whenever you have to deal with a customer. It won’t make you throw up in front of your screen, I promise. And if you do, you can afford the finest cleanup crew in town. So build that barn remote control software that helps your customers imprison those animals you love so much. You’ll barely notice.
A business is a long-term project. You’re making a choice for the next years of your life. It might take you a whole decade, maybe more, to turn your vague idea into a blossoming business that sustains your life.
You have to be 100% sure that you want to serve and empower your future audience. You will interact with these people every day. You’ll need to be able to stand them. Affinity is the name of the game. Best case, you love every single person you’ll be serving from the bottom of your heart. In reality, you’ll like most of them. This is the foundation of your motivation. If you’re solving the problems of people you don’t care about, your passion for the business and the problem you’re solving will quickly wane, and that’s never a good thing for the quality of a business.
Make sure that you’re dedicating the next part of your life to the right people.
Stupid Idea #4: Use Technology That You’ve Never Used Before
You found your perfect audience. You have a great idea to solve a problem they actually have. Now, what tech stack should you use? Go for a completely new language! If it comes with a framework that is highly experimental, use that too! No matter that you won’t be able to hire anyone to help you. You’re a 10x developer, right? So yes! Grab that new tech stack and spend a few months learning the ropes. Why bother spending time with your customers if you can crawl your way through Github repos and tutorial blog posts. That’s what being an entrepreneur is all about, right!?
Well, it’s not. Entrepreneurship is about empowering people, not trying out new tech. If you’re a PHP developer, consider building your side project in PHP. If your last four jobs used JavaScript, then now is not the right time to dive into Golang for your business. Use boring tech, and use the stuff you’re already up-to-speed with. If your business starts out as a side project, you don’t want to spend your precious free time learning a whole new technology. Consider this: it takes weeks to get acquainted with the best practices of a language. Stretched over a few hours every now and then, that’s months that you’d just spend learning the new tech, before you even get to create the first prototype of your Minimum Viable Product.
Obviously, you can learn new languages and frameworks. Life-long learning is a wonderful thing. But don’t mistake this for a requirement to build a business. The goal of building a business is to solve a problem for people. They don’t care what tech you use. If you want to build a hobby project, go ahead and try out that new tech. If you want to build a business, use what gets the job done quickly.
Stupid Idea #5: Never Hire Anyone
You’re a great founder. You code, you market, you sell, you file taxes, you have a vision, you’re the whole package. Why would you ever need any help? You can handle anything that comes across your path. Customer service while fixing a bug? No problem. Keeping an eye on the servers while you deploy? Writing cold emails while you code? Responding to haters on Twitter while writing this week’s newsletter? No problem whatsoever! You have infinite energy and attention! You’re never tired, you don’t need to sleep, and you’ll never need to recharge. You can do this alone forever!
Of course, you can’t. This is the biggest problem I ran into while being the only technical founder for FeedbackPanda, the EdTech SaaS business I co-founded with my partner Danielle Simpson back in 2017. When we sold the business in 2019, it was doing $55.000 in Monthly Recurring Revenue. We had over 5000 customers, but we still only ran the business with the two founders. I had to do all feature development, all technical customer service, and all integration work.
It was a nightmare. I labored under the conception that to hire someone, we’d need enough work to keep them busy for 40 hours a week. Of course, there are much more sensible ways of getting help, like freelancers, part-time workers, and project work, but I didn’t see it then. All I saw is that “I could handle it.”
I was overwhelmed quickly and was on the verge of burnout when we sold — and we sold partially because of it, too. You don’t need to make the same mistake. Consider that you only have so much energy to spend on your business. Look into how others can help you, and consider doing this early.
Stupid Idea #6: Don’t Document Anything
Okay okay, you need to hire eventually. But why should you prepare for this? After all, you’ll be hiring professionals that will immediately understand all the decisions you made in the past. They’ll instinctively navigate your completely undocumented source code, and they’ll never make any mistakes when deploying using your custom-built deployment pipeline that involves custom terminal commands. They’ll probably guess the right commands. When it comes to talking to your customers, your newly hired support agents will know exactly what to say the second you invite them into your customer service portal. No need for training.
There are two components of building a sellable company: high automation and strong documentation. Automation usually is documentation turned into technology, so it boils down to this: to more you document your processes, decisions, insights, and plans, the easier it will be to hand over work in your business. In fact, you could potentially hand over the whole business easily if the documentation is comprehensive.
Even for onboarding a new hire, having solid documentation in place is essential. It will give your hires the agency to learn more about the business they’re now working for and what they should be doing to help.
Don’t underestimate the desire of your employees to be their best selves. The more you can hand them to prepare and inform themselves, the better they’ll perform. Good documentation allows people to help you.
In fact, it even helps you. Any process is at risk of being executed erroneously. Standard Operating Procedures and any other step-by-step walkthroughs allow you to do your work more effectively and with fewer mistakes. If you have a deployment process that isn’t highly automated, write down exactly which steps to take. Next time you need to run a critical bug-fix deployment, you’ll know exactly what to do. And the devops person you hire will love to know these things too.
Here are a few more (really) stupid ideas:
Build everything on a platform you don’t own without a way to migrate your data away. It will probably never become a problem, right?Give everything away for free. Why make money when you can get massive exposure? That exposure surely will make your vendors consider giving you their services for free!Do everything manually. Never automate anything. You’re an artisan. Every customer service message needs to be hand-written — no matter how often you have to write the exact same stuff.
By now, it should be fairly clear that there are many ways to mess up building a business. Think of a few more. When you run into stories of people failing horribly, absorb them into your memory.
Your entrepreneurial path will be full of experiments, failure, and — eventually — success. When you’re looking for where you should be going, it’s good to know where you don’t want to end up. That’s the core mechanism of Charlie Munger’s problem inversion approach: imagine all possible ways to fail, and what’s left is a pretty good candidate for success.
Share this:TwitterFacebookLinkedIn

Related Articles from the Blog
 